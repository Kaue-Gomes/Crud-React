{"version":3,"sources":["App.js","index.js"],"names":["AddUserForm","_ref","addUser","initialFormState","id","name","username","user","setUser","useState","handleInputChange","event","value","target","React","createElement","className","htmlFor","type","onChange","required","onClick","preventDefault","PlusCircle","EditUserForm","_ref2","currentUser","updateUser","setEditing","Save","X","UserTable","_ref3","users","editRow","deleteUser","length","scope","map","key","Edit","Trash2","App","setUsers","setCurrentUser","editing","updatedUser","UserCircle","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9feb0a33.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { PlusCircle, Save, X, Edit, Trash2, User, UserCircle } from 'lucide-react';\n\n// Componente AddUserForm estilizado\nconst AddUserForm = ({ addUser }) => {\n  const initialFormState = { id: null, name: '', username: '' };\n  const [user, setUser] = useState(initialFormState);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!user.name || !user.username) return;\n    addUser(user);\n    setUser(initialFormState);\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-medium mb-2\" htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={user.name}\n          onChange={handleInputChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n          required\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-medium mb-2\" htmlFor=\"username\">\n          Username\n        </label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          value={user.username}\n          onChange={handleInputChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n          required\n        />\n      </div>\n      <button \n        onClick={handleSubmit} \n        className=\"inline-flex items-center px-4 py-2 bg-indigo-600 border border-transparent rounded-md font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n      >\n        <PlusCircle className=\"mr-2 h-4 w-4\" />\n        Add User\n      </button>\n    </div>\n  );\n};\n\n// Componente EditUserForm estilizado\nconst EditUserForm = ({ currentUser, updateUser, setEditing }) => {\n  const [user, setUser] = useState(currentUser);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    updateUser(user.id, user);\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-indigo-500\">\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-medium mb-2\" htmlFor=\"edit-name\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"edit-name\"\n          value={user.name}\n          onChange={handleInputChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n        />\n      </div>\n      <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-medium mb-2\" htmlFor=\"edit-username\">\n          Username\n        </label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          id=\"edit-username\"\n          value={user.username}\n          onChange={handleInputChange}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n        />\n      </div>\n      <div className=\"flex space-x-3\">\n        <button \n          onClick={handleSubmit} \n          className=\"inline-flex items-center px-4 py-2 bg-green-600 border border-transparent rounded-md font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors\"\n        >\n          <Save className=\"mr-2 h-4 w-4\" />\n          Update\n        </button>\n        <button \n          onClick={() => setEditing(false)} \n          className=\"inline-flex items-center px-4 py-2 bg-gray-200 border border-transparent rounded-md font-medium text-gray-700 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors\"\n        >\n          <X className=\"mr-2 h-4 w-4\" />\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Componente UserTable estilizado\nconst UserTable = ({ users, editRow, deleteUser }) => (\n  <div className=\"overflow-x-auto shadow-md sm:rounded-lg\">\n    {users.length > 0 ? (\n      <table className=\"w-full text-sm text-left text-gray-500\">\n        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n          <tr>\n            <th scope=\"col\" className=\"px-6 py-3\">Name</th>\n            <th scope=\"col\" className=\"px-6 py-3\">Username</th>\n            <th scope=\"col\" className=\"px-6 py-3\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id} className=\"bg-white border-b hover:bg-gray-50\">\n              <td className=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\">{user.name}</td>\n              <td className=\"px-6 py-4\">{user.username}</td>\n              <td className=\"px-6 py-4 space-x-2\">\n                <button\n                  onClick={() => editRow(user)}\n                  className=\"inline-flex items-center px-3 py-1 bg-blue-600 border border-transparent rounded-md text-xs font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\"\n                >\n                  <Edit className=\"mr-1 h-3 w-3\" />\n                  Edit\n                </button>\n                <button\n                  onClick={() => deleteUser(user.id)}\n                  className=\"inline-flex items-center px-3 py-1 bg-red-600 border border-transparent rounded-md text-xs font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors\"\n                >\n                  <Trash2 className=\"mr-1 h-3 w-3\" />\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    ) : (\n      <div className=\"text-center p-6 bg-white border rounded-lg\">\n        <p className=\"text-gray-500\">No users found</p>\n      </div>\n    )}\n  </div>\n);\n\n// Componente App principal\nconst App = () => {\n  const usersData = [\n    { id: 1, name: 'Tania', username: 'floppydiskette' },\n    { id: 2, name: 'Craig', username: 'siliconeidolon' },\n    { id: 3, name: 'Ben', username: 'benisphere' },\n  ];\n\n  const initialFormState = { id: null, name: '', username: '' };\n\n  // Setting state\n  const [users, setUsers] = useState(usersData);\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n  const [editing, setEditing] = useState(false);\n\n  // CRUD operations\n  const addUser = (user) => {\n    user.id = users.length + 1;\n    setUsers([...users, user]);\n  };\n\n  const deleteUser = (id) => {\n    setEditing(false);\n    setUsers(users.filter((user) => user.id !== id));\n  };\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false);\n    setUsers(users.map((user) => (user.id === id ? updatedUser : user)));\n  };\n\n  const editRow = (user) => {\n    setEditing(true);\n    setCurrentUser({ id: user.id, name: user.name, username: user.username });\n  };\n\n  return (\n    <div className=\"bg-gray-50 min-h-screen py-8\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Crud de react com Hooks</h1>\n          <p className=\"mt-2 text-gray-600\">Manage your users with this simple interface</p>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 gap-8\">\n          <div>\n            {editing ? (\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                  <Edit className=\"mr-2 h-5 w-5 text-indigo-600\" />\n                  Edit User\n                </h2>\n                <EditUserForm\n                  currentUser={currentUser}\n                  updateUser={updateUser}\n                  setEditing={setEditing}\n                />\n              </div>\n            ) : (\n              <div>\n                <h2 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n                  <PlusCircle className=\"mr-2 h-5 w-5 text-indigo-600\" />\n                  Add User\n                </h2>\n                <AddUserForm addUser={addUser} />\n              </div>\n            )}\n          </div>\n          \n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n              <UserCircle className=\"mr-2 h-5 w-5 text-indigo-600\" />\n              User List\n            </h2>\n            <UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}